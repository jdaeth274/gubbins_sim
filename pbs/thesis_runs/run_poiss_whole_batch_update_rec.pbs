#PBS -l select=1:ncpus=1:mem=12gb
#PBS -l walltime=48:00:00
#PBS -J 1-306

set -e
module load anaconda3/personal

source activate gubbins_update_rec

## Switch to the run directory 
cd ~/../ephemeral/gubbins_testing/update_rec_runs

## Set up the run logging 
# if [ $PBS_ARRAY_INDEX -eq 1 ]
# then
#	cat ~/gubbins_testing/simple_complex_models_to_run.txt > models_failed_branch.txt 
#	if [ -f models_finished_branch.txt ]
#	then
#		rm models_finished_branch.txt
#		touch models_finished_branch.txt
#	else
#		touch models_finished_branch.txt
#	fi
# else
#	sleep 3m
# fi

## Get the run models 
MODEL=$( head -n $PBS_ARRAY_INDEX ~/gubbins_testing/data_tree_models.txt | tail -n 1)

SIMUL_LOC="/rds/general/user/jd2117/ephemeral/gubbins_testing/untarred_simul/simul_data/poisson_data/"
BASIO=$( echo $MODEL | awk -F "-" '{print $1"-"$2"-"$3"-"$4"-"$5}')
FIRST_TREE=$( echo $MODEL | awk -F "-" '{print $6}')	
MAIN_TREE=$( echo $MODEL | awk -F "-" '{print $7}')
MAR=$( echo $MODEL | awk -F "-" '{print $8}')
MAIN_MODEL="${FIRST_TREE}-${MAIN_TREE}-${MAR}"
ALNFILE="${SIMUL_LOC}${BASIO}/${BASIO}.aln"
##Conditional statement for the reconstructions 
for K in {1..10}
do
	cd "rep_${K}_runs"
	ALNFILE="${SIMUL_LOC}rep_${K}_data/${BASIO}/${BASIO}.aln"
	if [ -d $BASIO ]
	then
		cd $BASIO
	else
		mkdir -p $BASIO
		cd $BASIO
	fi

	## Get the alignment file

	if [ -d $MAIN_MODEL ]
	then
		if [ -f "${MAIN_MODEL}/${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" ]
		then
			printf "Using already created res in ${MAIN_MODEL}/${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv \n" 
			continue 
		else

			rm -r $MAIN_MODEL
			mkdir $MAIN_MODEL
		fi
	else
		mkdir $MAIN_MODEL

	fi
	cd $MAIN_MODEL


	cp $ALNFILE ./

	if [ $MAR == "mar" ]
	then

		START_GUB=$SECONDS
		/usr/bin/time -v python ~/gubbins_jit/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC" --use-time-stamp --threads 1 --verbose \
		--tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE --mar \
		--model JC "${BASIO}.aln" > gubbins_log 2>&1 
		END_GUB=$(( SECONDS - START_GUB ))
		PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
		echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MAIN_MODEL}_time.txt"
		echo "Used this processor for the runs: $PROC" >> "../${MAIN_MODEL}_time.txt"
		rm *.aln
		python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
		cd ../../../


	else

		START_GUB=$SECONDS
		/usr/bin/time -v python ~/gubbins_jit/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC" --use-time-stamp --threads 1 --verbose \
		--tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE \
		--model JC "${BASIO}.aln" > gubbins_log 2>&1
		END_GUB=$(( SECONDS - START_GUB ))
		rm *.aln
		PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
		echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MAIN_MODEL}_time.txt"
		echo "Used this processor for the runs: $PROC" >> "../${MAIN_MODEL}_time.txt"
		python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
		cd ../../../
	fi
done

echo "Finished the runs for this model -  ${MODEL}-${PBS_ARRAY_INDEX}" >> "./models_finished_branch.txt"
sed -i "s/${MODEL}//g" ./models_failed_branch.txt
sed -i '/^[[:space:]]*$/d' ./models_failed_branch.txt
