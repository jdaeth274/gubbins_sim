#PBS -l select=1:ncpus=1:mem=12gb
#PBS -l walltime=24:00:00
#PBS -J 1-204

set -e
module load anaconda3/personal

source activate gubbins_git

## Switch to the run directory 
cd ~/../ephemeral/gubbins_testing/GTR_runs

## Get the run models 
MODEL=$( head -n $PBS_ARRAY_INDEX ~/gubbins_testing/gtr_run_data.txt | tail -n 1)

SIMUL_LOC="/rds/general/user/jd2117/ephemeral/gubbins_testing/simul_data/poisson_data/GTR_data"
BASIO=$( echo $MODEL | awk -F "-" '{print $1"-"$2"-"$3"-"$4"-"$5}')
FIRST_TREE=$( echo $MODEL | awk -F "-" '{print $6}')
MAIN_TREE=$( echo $MODEL | awk -F "-" '{print $7}')
MAR=$( echo $MODEL | awk -F "-" '{print $8}')
TREE_MODEL=$( echo $MODEL | awk -F "-" '{print $9}')
MAIN_MODEL="${FIRST_TREE}-${MAIN_TREE}-${MAR}"
ALNFILE="${SIMUL_LOC}${BASIO}/${BASIO}.aln"
##Conditional statement for the reconstructions 
for K in {1..10}
do
	cd "rep_${K}_runs"
	ALNFILE="${SIMUL_LOC}rep_${K}_data/${BASIO}/${BASIO}.aln"
	if [ -d $BASIO ]
	then
		cd $BASIO
	else
		mkdir -p $BASIO
		cd $BASIO
	fi

	## Get the alignment file
    MODEL_RECON="${MAIN_MODEL}-${TREE_MODEL}"
	if [ -d $MODEL_RECON ]
	then
		rm -r $MODEL_RECON
		mkdir $MODEL_RECON
	else
		mkdir $MODEL_RECON

	fi
	cd $MODEL_RECON


	cp $ALNFILE ./

	if [ $MAR == "mar" ]
	then

        if [ $TREE_MODEL == "JC" ]
        then
            START_GUB=$SECONDS
            /usr/bin/time -v python ~/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-GTR-${TREE_MODEL}" \
            --use-time-stamp --threads 1 --verbose \
            --tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE --mar \
            --model JC "${BASIO}.aln" > gubbins_log 2>&1 
            END_GUB=$(( SECONDS - START_GUB ))
            PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
            echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MODEL_RECON}_time.txt"
            echo "Used this processor for the runs: $PROC" >> "../${MODEL_RECON}_time.txt"
            rm *.aln
            python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
            cd ../../../
        else
            START_GUB=$SECONDS
            /usr/bin/time -v python ~/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-GTR-${TREE_MODEL}" \
            --use-time-stamp --threads 1 --verbose \
            --tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE --mar \
            --model GTR "${BASIO}.aln" > gubbins_log 2>&1 
            END_GUB=$(( SECONDS - START_GUB ))
            PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
            echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MODEL_RECON}_time.txt"
            echo "Used this processor for the runs: $PROC" >> "../${MODEL_RECON}_time.txt"
            rm *.aln
            python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
            cd ../../../
        fi

	else
        if[ $TREE_MODEL == "JC" ]
        then
            START_GUB=$SECONDS
            /usr/bin/time -v python ~/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-GTR-${TREE_MODEL}" \
            --use-time-stamp --threads 1 --verbose \
            --tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE \
            --model JC "${BASIO}.aln" > gubbins_log 2>&1
            END_GUB=$(( SECONDS - START_GUB ))
            rm *.aln
            PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
            echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MODEL_RECON}_time.txt"
            echo "Used this processor for the runs: $PROC" >> "../${MODEL_RECON}_time.txt"
            python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
            cd ../../../
        else
            START_GUB=$SECONDS
            /usr/bin/time -v python ~/gubbins/python/run_gubbins.py --prefix "${MAIN_MODEL}-rep-${K}-${BASIO}-GTR-${TREE_MODEL}" \
            --use-time-stamp --threads 1 --verbose \
            --tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE \
            --model JC "${BASIO}.aln" > gubbins_log 2>&1
            END_GUB=$(( SECONDS - START_GUB ))
            rm *.aln
            PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
            echo "Took this long for $MAIN_MODEL run, $END_GUB" > "../${MODEL_RECON}_time.txt"
            echo "Used this processor for the runs: $PROC" >> "../${MODEL_RECON}_time.txt"
            python ~/gubbins_testing/gubbins_sim/python/embl_changer.py --embl *branch_base_reconstruction.embl --output "${MAIN_MODEL}-rep-${K}-${BASIO}-JC-JC.embl_csv" --threads 1 
            cd ../../../
        fi
	fi
done

echo "Finished the runs for this model -  ${MODEL}-${PBS_ARRAY_INDEX}" >> "./models_finished_branch.txt"
