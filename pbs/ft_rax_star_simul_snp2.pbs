#PBS -l select=1:ncpus=1:mem=24gb
#PBS -l walltime=24:00:00
#PBS -J 1-2

set -e
module load anaconda3/personal

source activate gubbins2_env

cd ~/gubbins_testing/18_constant_branch_snp2

MODEL=$( head -n $PBS_ARRAY_INDEX ../ft_rax_star.txt | tail -n 1)

FIRST_TREE=$( echo $MODEL | awk -F "-" '{print $1}')
MAIN_TREE=$( echo $MODEL | awk -F "-" '{print $2}')
MAR=$( echo $MODEL | awk -F "-" '{print $3}')

if [ -d $MODEL ]
then
	rm -r $MODEL
	mkdir $MODEL
else
	mkdir $MODEL

fi
cd $MODEL

while read line <&3;
do
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "In the loooooooooooooooooooop "
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
BASIO=$(basename $line)
if [ -d $BASIO ]
then
rm -r $BASIO
mkdir $BASIO
else
mkdir $BASIO
fi

cd $BASIO

ALNFILE="${line}/${BASIO}.aln"
cp $ALNFILE ./
START_GUB=$SECONDS
python ~/gubbins/python/run_gubbins.py --prefix "${MODEL}-${BASIO}" --use-time-stamp --threads 1 --verbose \
--tree-builder $MAIN_TREE --first-tree-builder $FIRST_TREE \
--model JC "${BASIO}.aln" 
END_GUB=$(( SECONDS - START_GUB ))
cd ../
done 3< ~/gubbins_testing/simul_data/constant_branch_rate.txt

#PROC=$(cat /proc/cpuinfo | grep 'model name' | uniq)
#echo "Took this long for $MODEL run, $END_GUB" > "../${MODEL}_time.txt"
#echo "Used this processor for the runs: $PROC" >> "../${MODEL}_time.txt"
echo "Finished the runs for this model -  ${MODEL}-${PBS_ARRAY_INDEX}" >> "../models_finished.txt"
sed -i "s/${MODEL}//g" ../models_failed.txt
sed -i '/^[[:space:]]*$/d' ../models_failed.txt
